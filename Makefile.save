-I /opt/homebrew/Cellar/sdl2/2.0.20/include 
game:
	g++ -std=c++11 main.cpp -o play ///Written By Mallot1 from 
http://www.mallot1development.wordpress.com on July 3rd, 2016. Finished 1:30 AM EST. All rights 
reserved.

//Include SDL2 and SDL2_Ttf
#include <SDL2/SDL.h>
#include <SDL2/SDL_ttf.h>

int main(int argc, char* argv[])
{
    //Init SDL2 and SDL2_TTF
    SDL_Init(SDL_INIT_EVERYTHING);
    TTF_Init();

    //The our SDL_Window and SDL_Renderer
    SDL_Window* window = SDL_CreateWindow("SDL2_Ttf Test", 100, 100, 320, 480, SDL_WINDOW_SHOWN);
    SDL_Renderer* renderer = SDL_CreateRenderer(window, -1, SDL_RENDERER_ACCELERATED);

    //Make a color for our test {R, G, B}
    SDL_Color color = {255, 0, 0};

    //Set the position of our text
    int x = 60;
    int y = 190;
    int w = 200;
    int h = 50;

    //Set the path to our font file. If you don't have a text file you can find one at fontsquirrel.com
    const char* fontDir = "font.ttf";

    //Set the text size
    int textSize = 8;

    //Write the text to display
    const char* text = "SDL2_Ttf    works    on    Raspberry    Pi!";

    //Make our TTF_Font variable
    TTF_Font* font = TTF_OpenFont(fontDir, textSize);

    //Make an SDL_Surface for the text
    SDL_Surface* sText = TTF_RenderText_Solid(font, text, color);

    //Make an SDL_Texture for the text
    SDL_Texture* tText = SDL_CreateTextureFromSurface(renderer, sText);

    //Make the rectangle area where the text will be placed
    SDL_Rect rText = {x, y, w, h};

    //Draw our text to the screen
    SDL_RenderCopy(renderer, tText, NULL, &rText);

    //Close the Font since we are done with it
    TTF_CloseFont(font);

    //Free the Surface since we are done with it
    SDL_FreeSurface(sText);

    //Destroy the Texture since we are done with it
    SDL_DestroyTexture(tText);

    //Render everything to the screen
    SDL_RenderPresent(renderer);

    //Wait 5 seconds so we can enjoy looking at text written to the screen with SDL2_Ttf!
    SDL_Delay(5000);

    //Return 0 since main is an int function and we should always return something from a non void 
function
    return 0;
}-I 
include -L lib -l SDL2-2.0.0
